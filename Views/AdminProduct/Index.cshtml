@model List<SatışProject.Entities.Product>

@{
    ViewData["Title"] = "Ürün Listesi";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";

    // Kategori listesini ViewBag üzerinden alalım
    var categories = ViewBag.Categories as List<SatışProject.Entities.Category>;
}

<!-- CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet" />

<div class="container mt-5">
    <h3 class="text-center fw-bold text-primary mb-4">Ürün Listesi</h3>

    <div class="d-flex justify-content-between align-items-center mb-3">
        <div class="d-flex gap-2">
            <input type="text" id="searchInput" class="form-control" placeholder="Ara..." />
            <select id="categoryFilter" class="form-select w-auto">
                <option value="">Tüm Kategoriler</option>
                @foreach (var category in categories!)
                {
                    <option value="@category.Name">@category.Name</option>
                }
            </select>
            <select id="itemsPerPage" class="form-select w-auto">
                <option value="5">5</option>
                <option value="10" selected>10</option>
                <option value="25">25</option>
            </select>
        </div>
        @if (User.IsInRole("Admin"))
        {
            <a href="/AdminProduct/Create" class="btn btn-success">
                <i class="bi bi-plus-circle me-1"></i> Yeni Ürün Ekle
            </a>
        }
    </div>

    <div class="table-responsive shadow-sm bg-white rounded p-3">
        <table class="table table-hover text-center align-middle" id="productTable">
            <thead class="table-light">
                <tr>
                    <th>#</th>
                    <th>Ürün Adı</th>
                    <th>Fiyat</th>
                    <th>Stok</th>
                    <th>Görsel</th>
                    <th>Kategori</th>
                    <th>Durum</th>
                    <th>İşlemler</th>
                </tr>
            </thead>
            <tbody>
                @{
                    int count = 1;
                }
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@count</td>
                        <td class="text-start">@item.Name</td>
                        <td>@item.UnitPrice ₺</td>
                        <td>
                            @if (item.StockQuantity <= 5)
                            {
                                <span class="badge bg-warning text-dark">@item.StockQuantity</span>
                            }
                            else
                            {
                                @item.StockQuantity
                            }
                        </td>
                        <td>
                            @if (!string.IsNullOrEmpty(item.ImageUrl))
                            {
                                <img src="@item.ImageUrl" class="rounded" style="width: 50px; height: 50px; object-fit: cover;" />
                            }
                            else
                            {
                                <span class="text-muted">Yok</span>
                            }
                        </td>
                        <td class="category-name">@item.Category?.Name</td>
                        <td>
                            <span class="badge @(item.IsDeleted ? "bg-danger" : "bg-success")">
                                @(item.IsDeleted ? "Pasif" : "Aktif")
                            </span>
                        </td>
                        <td>
                            @if (User.IsInRole("Admin"))
                            {
                                <a href="/AdminProduct/Edit/@item.ProductId" class="btn btn-outline-warning btn-sm" title="Düzenle">
                                    <i class="bi bi-pencil-square"></i>
                                </a>
                            }

                            <a href="/AdminProduct/Details/@item.ProductId" class="btn btn-outline-info btn-sm mx-1" title="Detaylar">
                                <i class="bi bi-info-circle"></i>
                            </a>

                            @if (User.IsInRole("Admin"))
                            {
                                <button type="button" class="btn btn-outline-danger btn-sm delete-btn"
                                        data-id="@item.ProductId"
                                        data-name="@item.Name"
                                        title="Sil">
                                    <i class="bi bi-trash"></i>
                                </button>

                                <form id="deleteForm-@item.ProductId" action="/AdminProduct/Delete/@item.ProductId" method="post" style="display:none;">
                                    @Html.AntiForgeryToken()
                                </form>
                            }
                        </td>

                    </tr>
                    count++;
                }
            </tbody>
        </table>

        <nav>
            <ul class="pagination justify-content-center" id="pagination"></ul>
        </nav>
    </div>
</div>

<!-- JS -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    $(document).ready(function () {
        const searchInput = $("#searchInput");
        const categoryFilter = $("#categoryFilter");
        const rowsPerPageSelect = $("#itemsPerPage");
        const tableRows = $("#productTable tbody tr");
        const pagination = $("#pagination");

        $(".delete-btn").on("click", function () {
            const productId = $(this).data("id");
            const productName = $(this).data("name");

            Swal.fire({
                title: 'Emin misiniz?',
                text: `"${productName}" adlı ürünü silmek istediğinize emin misiniz?`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Evet, sil!',
                cancelButtonText: 'İptal'
            }).then((result) => {
                if (result.isConfirmed) {
                    $(`#deleteForm-${productId}`).submit();
                }
            });
        });

        function renderTable() {
            const searchTerm = searchInput.val().toLowerCase();
            const selectedCategory = categoryFilter.val().toLowerCase();
            const itemsPerPage = parseInt(rowsPerPageSelect.val());

            const filteredRows = tableRows.filter(function () {
                const text = $(this).text().toLowerCase();
                const category = $(this).find(".category-name").text().toLowerCase();

                return text.includes(searchTerm) &&
                    (selectedCategory === "" || category === selectedCategory);
            });

            tableRows.hide();
            pagination.empty();

            const pageCount = Math.ceil(filteredRows.length / itemsPerPage);
            let currentPage = 1;

            function showPage(page) {
                currentPage = page;
                filteredRows.hide();
                const start = (page - 1) * itemsPerPage;
                const end = start + itemsPerPage;
                filteredRows.slice(start, end).show();

                pagination.empty();
                for (let i = 1; i <= pageCount; i++) {
                    pagination.append(
                        `<li class="page-item ${i === page ? 'active' : ''}">
                                                    <a class="page-link" href="#">${i}</a>
                                                </li>`
                    );
                }
            }

            pagination.off("click").on("click", "a", function (e) {
                e.preventDefault();
                const page = parseInt($(this).text());
                if (!isNaN(page)) {
                    showPage(page);
                }
            });

            showPage(currentPage);
        }

        searchInput.on("input", renderTable);
        categoryFilter.on("change", renderTable);
        rowsPerPageSelect.on("change", renderTable);

        renderTable();
    });
</script>
