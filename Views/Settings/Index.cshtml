@model UserProfileViewModel

@{
    ViewData["Title"] = "Profil Ayarları"; // Sayfa başlığını ayarlar
    Layout = "~/Views/Shared/_AdminLayout.cshtml"; // Kullanılacak layout dosyasını belirtir
}

<div class="container mx-auto p-4">
    <h1 class="text-3xl font-bold mb-6 text-gray-800 text-center">Profil Ayarları</h1> @* Başlığı ortalamak için 'text-center' eklendi *@

    @* Başarılı mesajını gösterir *@
    @if (ViewBag.SuccessMessage != null)
    {
        <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4" role="alert">
            <strong class="font-bold">Başarılı!</strong>
            <span class="block sm:inline">@ViewBag.SuccessMessage</span>
        </div>
    }
    @* Hata mesajını gösterir *@
    @if (ViewBag.ErrorMessage != null)
    {
        <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
            <strong class="font-bold">Hata!</strong>
            <span class="block sm:inline">@ViewBag.ErrorMessage</span>
        </div>
    }

    @* Ana içerik bloğunu (fotoğraf ve kullanıcı bilgileri) ortalamak için 'mx-auto' eklendi. Max genişlik verilerek ortalama daha belirgin hale getirildi. *@
    <div class="bg-white shadow-md rounded-lg p-6 mb-6 max-w-4xl mx-auto">
        @* Profil fotoğrafını ve kullanıcı bilgilerini içeren ana düzen. md (orta ekran) ve üzeri için yatay, daha küçük ekranlar için dikey hizalanır. *@
        <div class="flex flex-col md:flex-row items-center md:items-start space-y-4 md:space-y-0 md:space-x-6">
            @* Profil fotoğrafı ve güncelleme butonunun bulunduğu kısım. md ekranlarda sola hizalı, küçük ekranlarda ortalanır. *@
            <div class="flex-shrink-0 w-full md:w-auto flex flex-col items-center">
                @* 'items-center' eklenerek fotoğraf ve buton dikey hizalamada ortalanır *@
                @* Profil fotoğrafını gösterir. Eğer fotoğraf yoksa veya yüklenmezse varsayılan fotoğrafı kullanır. *@
                <img src="@(string.IsNullOrEmpty(Model.ProfilePhotoUrl) ? "/images/default_profile.png" : Model.ProfilePhotoUrl)"
                     alt="Profil Fotoğrafı"
                     class="w-20 h-20 rounded-full object-cover border-4 border-blue-300 shadow-lg" @* Fotoğraf boyutunu w-20 h-20 olarak ayarlar *@
                     onerror="this.onerror=null;this.src='/images/default_profile.png';" />
                <div class="mt-3 text-center">
                    @* Profil fotoğrafını güncelleme butonu *@
                    <a asp-action="UpdateProfilePhoto" class="inline-block bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded-full text-sm transition duration-300">
                        Fotoğrafı Güncelle
                    </a>
                </div>
            </div>

            @* Kullanıcı bilgilerinin bulunduğu kısım *@
            <div class="flex-grow w-full">
                <h2 class="text-2xl font-semibold mb-4 text-gray-700">Kullanıcı Bilgileri</h2>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                        <p class="text-gray-600"><strong class="text-gray-800">Kullanıcı Adı:</strong> @Model.UserName</p>
                        <p class="text-gray-600"><strong class="text-gray-800">Ad Soyad:</strong> @Model.FullName</p>
                        <p class="text-gray-600"><strong class="text-gray-800">E-posta:</strong> @Model.Email</p>
                        @* Telefon numarası boşsa "Belirtilmemiş" yazar *@
                        <p class="text-gray-600"><strong class="text-gray-800">Telefon Numarası:</strong> @(string.IsNullOrEmpty(Model.PhoneNumber) ? "Belirtilmemiş" : Model.PhoneNumber)</p>
                    </div>
                    <div>
                        @* Hesap aktiflik durumunu gösterir *@
                        <p class="text-gray-600"><strong class="text-gray-800">Hesap Aktif Mi?:</strong> @(Model.IsActive ? "Evet" : "Hayır")</p>
                        @* Hesabın oluşturulma tarihini gösterir *@
                        <p class="text-gray-600"><strong class="text-gray-800">Oluşturulma Tarihi:</strong> @Model.CreatedAt.ToShortDateString()</p>
                        <p class="text-gray-600">
                            <strong class="text-gray-800">Roller:</strong>
                            @* Kullanıcının rollerini listeler, rol atanmamışsa belirtir *@
                            @if (Model.Roles != null && Model.Roles.Any())
                            {
                                <span class="font-medium">@string.Join(", ", Model.Roles)</span>
                            }
                            else
                            {
                                <span class="text-gray-500">Rol atanmamış</span>
                            }
                        </p>
                    </div>
                </div>
                <div class="mt-6 flex flex-wrap gap-3">
                    @* Profil bilgilerini düzenleme butonu *@
                    <a asp-action="Edit" class="bg-indigo-500 hover:bg-indigo-600 text-white font-bold py-2 px-4 rounded-lg transition duration-300">
                        Profil Bilgilerini Düzenle
                    </a>
                    @* Şifre değiştirme butonu *@
                    <a asp-action="ChangePassword" class="bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded-lg transition duration-300">
                        Şifreyi Değiştir
                    </a>
                </div>
            </div>
        </div>
    </div>

    @* Çalışan bilgileri varsa gösterir *@
    @if (Model.EmployeeDetails != null)
    {
        @* Çalışan bilgilerini içeren bloğu ortalamak için 'mx-auto' eklendi *@
        <div class="bg-white shadow-md rounded-lg p-6 max-w-4xl mx-auto">
            <h2 class="text-2xl font-semibold mb-4 text-gray-700">Çalışan Bilgileri</h2>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                    <p class="text-gray-600"><strong class="text-gray-800">Unvan:</strong> @Model.EmployeeDetails.Title</p>
                    <p class="text-gray-600"><strong class="text-gray-800">Departman:</strong> @Model.EmployeeDetails.DepartmentName</p>
                    <p class="text-gray-600"><strong class="text-gray-800">Doğum Tarihi:</strong> @Model.EmployeeDetails.BirthDate.ToShortDateString()</p>
                </div>
                <div>
                    <p class="text-gray-600"><strong class="text-gray-800">Adres:</strong> @Model.EmployeeDetails.Address</p>
                    <p class="text-gray-600"><strong class="text-gray-800">Şehir:</strong> @Model.EmployeeDetails.City</p>
                    <p class="text-gray-600"><strong class="text-gray-800">Ülke:</strong> @Model.EmployeeDetails.Country</p>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial"); // Validasyon betiklerini ekler
    }
}