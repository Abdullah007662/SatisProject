@model SatışProject.Models.AdminDashboardViewModel

@{
    ViewData["Title"] = "Dashboard";
    Layout = "~/Views/Shared/_AdminLayout.cshtml"; // Layout yolunuzu doğrulayın
}

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col">
            <h2 class="page-title">Dashboard</h2>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/Admin">Ana Sayfa</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Dashboard</li>
                </ol>
            </nav>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6 col-lg-3">
            <div class="stat-card">
                <div class="stat-icon bg-light-primary">
                    <i class="fas fa-shopping-cart"></i>
                </div>
                <div class="stat-info">
                    <div class="stat-value">@Model.TotalOrders.ToString("N0")</div>
                    <div class="stat-label">Toplam Sipariş</div>
                </div>
            </div>
        </div>
        <div class="col-md-6 col-lg-3">
            <div class="stat-card">
                <div class="stat-icon bg-light-success">
                    <i class="fas fa-lira-sign"></i>
                </div>
                <div class="stat-info">
                    <div class="stat-value">@Model.TotalRevenue.ToString("N2")₺</div>
                    <div class="stat-label">Toplam Gelir</div>
                </div>
            </div>
        </div>
        <div class="col-md-6 col-lg-3">
            <div class="stat-card">
                <div class="stat-icon bg-light-warning">
                    <i class="fas fa-users"></i>
                </div>
                <div class="stat-info">
                    <div class="stat-value">@Model.TotalCustomers.ToString("N0")</div>
                    <div class="stat-label">Toplam Müşteri</div>
                </div>
            </div>
        </div>
        <div class="col-md-6 col-lg-3">
            <div class="stat-card">
                <div class="stat-icon bg-light-danger">
                    <i class="fas fa-box"></i>
                </div>
                <div class="stat-info">
                    <div class="stat-value">@Model.TotalProducts.ToString("N0")</div>
                    <div class="stat-label">Toplam Ürün</div>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-lg-8">
            <div class="card">
                <div class="card-header">
                    <ul class="nav nav-tabs card-header-tabs" id="salesStatsTab" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link active" id="general-sales-tab" data-bs-toggle="tab" href="#general-sales" role="tab" aria-controls="general-sales" aria-selected="true">Genel Satışlar</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="employee-performance-tab" data-bs-toggle="tab" href="#employee-performance" role="tab" aria-controls="employee-performance" aria-selected="false">Çalışan Performansı</a>
                        </li>
                    </ul>
                </div>
                <div class="card-body">
                    <div class="tab-content" id="salesStatsTabContent">
                        <div class="tab-pane fade show active" id="general-sales" role="tabpanel" aria-labelledby="general-sales-tab">
                            <canvas id="salesChart" height="300"></canvas>
                        </div>
                        <div class="tab-pane fade" id="employee-performance" role="tabpanel" aria-labelledby="employee-performance-tab">
                            <canvas id="employeeSalesChart" height="300"></canvas>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">En Çok Satan Ürünler</h5>
                </div>
                <div class="card-body">
                    <canvas id="productsChart" height="300"></canvas>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Son Siparişler</h5>
                    <a href="/Admin/Orders" class="btn btn-sm btn-primary">Tümünü Gör</a>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover datatable">
                            <thead>
                                <tr>
                                    <th>Sipariş No</th>
                                    <th>Müşteri</th>
                                    <th>Tarih</th>
                                    <th>Toplam</th>
                                    <th>Durum</th>
                                    <th>İşlemler</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var order in Model.RecentOrders)
                                {
                                    <tr>
                                        <td>#@order.SaleNumber</td>
                                        <td>@(order.Customer?.ContactName ?? order.Customer?.CompanyName)</td>
                                        <td>@order.SaleDate.ToString("dd.MM.yyyy")</td>
                                        <td>@order.GrandTotal.ToString("N2")₺</td>
                                        <td><span class="badge @(order.Status == SaleStatus.Completed ? "bg-success" : order.Status == SaleStatus.Pending ? "bg-warning text-dark" : order.Status == SaleStatus.Cancelled ? "bg-danger" : "bg-primary")">@order.Status.ToString()</span></td>
                                        <td>
                                            <div class="dropdown">
                                                <button class="btn btn-sm btn-light dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                                    İşlemler
                                                </button>
                                                <ul class="dropdown-menu">
                                                    <li><a class="dropdown-item" href="#"><i class="fas fa-eye me-2"></i> Görüntüle</a></li>
                                                    <li><a class="dropdown-item" href="#"><i class="fas fa-edit me-2"></i> Düzenle</a></li>
                                                    <li><a class="dropdown-item" href="#"><i class="fas fa-print me-2"></i> Yazdır</a></li>
                                                </ul>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-lg-6">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Hızlı İşlemler</h5>
                </div>
                <div class="card-body">
                    <div class="row g-3">
                        <div class="col-6">
                            <a href="/Admin/Products/Create" class="btn btn-outline-primary w-100 py-3">
                                <i class="fas fa-plus mb-2 d-block fs-3"></i>
                                Yeni Ürün Ekle
                            </a>
                        </div>
                        <div class="col-6">
                            <a href="/Admin/Orders/Create" class="btn btn-outline-success w-100 py-3">
                                <i class="fas fa-shopping-cart mb-2 d-block fs-3"></i>
                                Yeni Sipariş Oluştur
                            </a>
                        </div>
                        <div class="col-6">
                            <a href="/Admin/Customers/Create" class="btn btn-outline-info w-100 py-3">
                                <i class="fas fa-user-plus mb-2 d-block fs-3"></i>
                                Müşteri Ekle
                            </a>
                        </div>
                        <div class="col-6">
                            <a href="/Admin/Reports" class="btn btn-outline-warning w-100 py-3">
                                <i class="fas fa-chart-pie mb-2 d-block fs-3"></i>
                                Rapor Oluştur
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-6">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Son Aktiviteler</h5>
                    <a href="#" class="btn btn-sm btn-link">Tümünü Gör</a>
                </div>
                <div class="card-body p-0">
                    <ul class="list-group list-group-flush">
                        @foreach (var activity in Model.RecentActivities)
                        {
                            <li class="list-group-item d-flex align-items-center px-3 py-3">
                                <div class="avatar @activity.BackgroundClass me-3">
                                    <i class="@activity.IconClass"></i>
                                </div>
                                <div class="flex-grow-1">
                                    <p class="mb-0"><strong>@activity.Title</strong></p>
                                    <small class="text-muted">@activity.Description</small>
                                </div>
                                <div class="text-end">
                                    <small class="text-muted">@activity.TimeAgo</small>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        $(document).ready(function () {
            // Genel Satış İstatistikleri Grafiği
            var salesCtx = document.getElementById('salesChart').getContext('2d');
            var salesChart = new Chart(salesCtx, {
                type: 'line',
                data: {
                    labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.SalesStatistics.Select(s => s.Item1).ToList())),
                    datasets: [{
                        label: 'Satışlar',
                        data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.SalesStatistics.Select(s => s.Item2).ToList())),
                        backgroundColor: 'rgba(93, 135, 255, 0.1)',
                        borderColor: '#5D87FF',
                        borderWidth: 2,
                        tension: 0.3,
                        pointBackgroundColor: '#ffffff',
                        pointBorderColor: '#5D87FF',
                        pointBorderWidth: 2,
                        pointRadius: 4
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        },
                        tooltip: {
                            mode: 'index',
                            intersect: false,
                            callbacks: {
                                label: function (context) {
                                    return context.dataset.label + ': ' + context.parsed.y.toLocaleString('tr-TR', { style: 'currency', currency: 'TRY' });
                                }
                            }
                        }
                    },
                    scales: {
                        x: {
                            grid: {
                                display: false
                            }
                        },
                        y: {
                            beginAtZero: true,
                            ticks: {
                                callback: function (value) {
                                    return value.toLocaleString('tr-TR', { style: 'currency', currency: 'TRY' });
                                }
                            }
                        }
                    }
                }
            });

            // En Çok Satan Ürünler Grafiği
            var productsCtx = document.getElementById('productsChart').getContext('2d');
            var productsChart = new Chart(productsCtx, {
                type: 'doughnut',
                data: {
                    labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.TopSellingProducts.Keys.ToList())),
                    datasets: [{
                        data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.TopSellingProducts.Values.ToList())),
                        backgroundColor: ['#5D87FF', '#13DEB9', '#FFAE1F', '#FA896B', '#49BEFF'],
                        borderWidth: 0
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom',
                            labels: {
                                boxWidth: 12,
                                padding: 15
                            }
                        }
                    },
                    cutout: '70%'
                }
            });

            // Çalışan Satış Performansı Grafiği
            var employeeSalesCtx = document.getElementById('employeeSalesChart').getContext('2d');

            var employeeSalesData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.EmployeeSalesStatistics));
            var employeeNames = Object.keys(employeeSalesData);

            var allMonths = [];
            for (const employeeName in employeeSalesData) {
                employeeSalesData[employeeName].forEach(item => {
                    if (!allMonths.includes(item.Item1)) {
                        allMonths.push(item.Item1);
                    }
                });
            }
            allMonths.sort((a, b) => {
                const [monthA, yearA] = a.split('.').map(Number);
                const [monthB, yearB] = b.split('.').map(Number);
                if (yearA !== yearB) return yearA - yearB;
                return monthA - monthB;
            });

            var employeeDatasets = [];
            var colors = [
                'rgba(255, 99, 132, 0.7)', // Kırmızı
                'rgba(54, 162, 235, 0.7)', // Mavi
                'rgba(255, 206, 86, 0.7)', // Sarı
                'rgba(75, 192, 192, 0.7)', // Turkuaz
                'rgba(153, 102, 255, 0.7)', // Mor
                'rgba(255, 159, 64, 0.7)', // Turuncu
                'rgba(200, 200, 200, 0.7)', // Gri
                'rgba(100, 255, 100, 0.7)', // Yeşil
                'rgba(255, 0, 255, 0.7)', // Pembe
                'rgba(0, 255, 255, 0.7)', // Camgöbeği
                'rgba(128, 0, 0, 0.7)', // Koyu Kırmızı
                'rgba(0, 128, 0, 0.7)', // Koyu Yeşil
                'rgba(0, 0, 128, 0.7)'  // Koyu Mavi
            ];
            var borderColors = [
                'rgba(255, 99, 132, 1)',
                'rgba(54, 162, 235, 1)',
                'rgba(255, 206, 86, 1)',
                'rgba(75, 192, 192, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(255, 159, 64, 1)',
                'rgba(200, 200, 200, 1)',
                'rgba(100, 255, 100, 1)',
                'rgba(255, 0, 255, 1)',
                'rgba(0, 255, 255, 1)',
                'rgba(128, 0, 0, 1)',
                'rgba(0, 128, 0, 1)',
                'rgba(0, 0, 128, 1)'
            ];

            employeeNames.forEach((employeeName, index) => {
                var employeeDataMap = new Map();
                employeeSalesData[employeeName].forEach(item => {
                    employeeDataMap.set(item.Item1, item.Item2);
                });

                var dataForEmployee = allMonths.map(month => employeeDataMap.get(month) || 0);

                employeeDatasets.push({
                    label: employeeName + ' Satış (₺)',
                    data: dataForEmployee,
                    backgroundColor: colors[index % colors.length],
                    borderColor: borderColors[index % borderColors.length],
                    borderWidth: 2,
                    fill: false,
                    tension: 0.1
                });
            });

            new Chart(employeeSalesCtx, {
                type: 'line',
                data: {
                    labels: allMonths,
                    datasets: employeeDatasets
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: 'Toplam Satış (₺)'
                            },
                            ticks: {
                                callback: function (value) {
                                    return value.toLocaleString('tr-TR', { style: 'currency', currency: 'TRY' });
                                }
                            }
                        },
                        x: {
                            title: {
                                display: true,
                                text: 'Ay.Yıl'
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            display: true,
                            position: 'top'
                        },
                        tooltip: {
                            mode: 'index',
                            intersect: false,
                            callbacks: {
                                label: function (context) {
                                    return context.dataset.label + ': ' + context.parsed.y.toLocaleString('tr-TR', { style: 'currency', currency: 'TRY' });
                                }
                            }
                        }
                    }
                }
            });

            // Tab geçişi yapıldığında Chart.js grafiklerini yeniden boyutlandırmak için
            $('a[data-bs-toggle="tab"]').on('shown.bs.tab', function (e) {
                if (e.target.id === 'general-sales-tab') {
                    salesChart.resize();
                } else if (e.target.id === 'employee-performance-tab') {
                    // employeeSalesChart'ın zaten çalışan nesnesi olduğunu varsayıyoruz
                    // Eğer employeeSalesChart değişkeni henüz oluşturulmadıysa hata verebilir.
                    // En basit yol:
                    employeeSalesCtx.chart.resize();
                }
            });
        });
    </script>
}